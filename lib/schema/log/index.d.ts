import * as yup from 'yup';
import { CallLogValue } from './callLog';
import { GptLogValue } from './gptLog';
import { ImpulseLogValue } from './impulseLog';
import { ShowTourLogValue } from './showTourLog';
import { ToolCallLogValue } from './toolCallLog';
import { UserLogValue } from './userLog';
import { WhatsappMessageLogValue } from './whatsappMessageLog';
export * from './gptLog';
export * from './impulseLog';
export * from './showTourLog';
export * from './toolCallLog';
export * from './userLog';
export * from './whatsappMessageLog';
export * from './utils/behaviorData';
export * from './utils/emotionData';
export * from './utils/tacticData';
export declare const logSchemas: Record<LogValue['type'], yup.ObjectSchema<LogValue>>;
export declare const logSchema: yup.Lazy<ValidatedLog, yup.AnyObject, any>;
type ValidatedLog = {
    [K in LogValue['type']]: yup.InferType<(typeof logSchemas)[K]>;
}[LogValue['type']];
export type LogValue = UserLogValue | CallLogValue | ShowTourLogValue | ToolCallLogValue | WhatsappMessageLogValue | ImpulseLogValue | GptLogValue;
